问题描述
　　一个整数的“反置数”指的是把该整数的每一位数字的顺序颠倒过来所得到的另一个整数。如果一个整数的末尾是以0结尾，那么在它的反置数当中，这些0就被省略掉了。比如说，1245的反置数是5421，而1200的反置数是21。请编写一个程序，输入两个整数，然后计算这两个整数的反置数之和sum，然后再把sum的反置数打印出来。要求：由于在本题中需要多次去计算一个整数的反置数，因此必须把这部分代码抽象为一个函数的形式。
　　输入格式：输入只有一行，包括两个整数，中间用空格隔开。
　　输出格式：输出只有一行，即相应的结果。
　　输入输出样例
样例输入
435 754
样例输出
199

---------------------------------------------------
#include<bits/stdc++.h>
using namespace std;
int trans(int n) {
	int r = 0;
	while (n != 0) {
		r = r * 10 + n % 10;
		n /= 10;
	}
	return r;
}
int main () {
	int n, m;
	scanf("%d %d", &n, &m);
	printf("%d\n", trans(trans(n) + trans(m)));
	return 0;
}
