问题描述
　　编写一个程序，读入一组整数（不超过20个），并把它们保存在一个整型数组中。当用户输入0时，表示输入结束。然后程序将把这个数组中的值按逆序重新存放，并打印出来。要求：(1)只能定义一个数组；(2)在交换两个数组元素的值时，必须使用单独定义的一个函数swap。例如：假设用户输入了一组数据：7 19 -5 6 2 0，那么程序将会把前五个有效数据保存在一个数组中，即7 19 -5 6 2，然后把这个数组中的值按逆序重新存放，即变成了2 6 -5 19 7，然后把它们打印出来。
　　输入格式：输入只有一行，包括若干个整数，最后一个整数是0。
　　输出格式：输出只有一行，包括若干个整数，即逆序排列后的结果。
输入输出样例
样例输入
7 19 -5 6 2 0
样例输出
2 6 -5 19 7

--------------------------------------------
#include<bits/stdc++.h>
using namespace std;
int main () {
	int n;
	vector<int> v;
	while(scanf("%d", &n) && n) {
		v.push_back(n);
	}
	for (int i = v.size() - 1; i >= 0; i--) {
		printf("%d ", v[i]);
	}
	return 0;
}
