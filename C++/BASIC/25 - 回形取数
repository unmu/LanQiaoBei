问题描述
　　回形取数就是沿矩阵的边取数，若当前方向上无数可取或已经取过，则左转90度。一开始位于矩阵左上角，方向向下。
输入格式
　　输入第一行是两个不超过200的正整数m, n，表示矩阵的行和列。接下来m行每行n个整数，表示这个矩阵。
输出格式
　　输出只有一行，共mn个数，为输入矩阵回形取数得到的结果。数之间用一个空格分隔，行末不要有多余的空格。
样例输入
3 3
1 2 3
4 5 6
7 8 9
样例输出
1 4 7 8 9 6 3 2 5
样例输入
3 2
1 2
3 4
5 6
样例输出
1 3 5 6 4 2


------------------------------------------
#include<bits/stdc++.h>
using namespace std;
int main () {
	int m, n, tmp;
	scanf("%d %d", &m, &n);
	vector<vector<int> > v;
	v.resize(m, vector<int>(n));
	for (int i = 0; i < m; i++) {
		for (int j = 0; j < n; j++) {
			scanf("%d", &tmp);
			v[i][j] = tmp;
		}
	} 
	int level = min(m, n) / 2 + min(m, n) % 2;
	int cnt = m * n, l = 0;
	while (l <= level && cnt != 0) {
		for (int i = l; i < m - l && cnt; i++) {
			if (i == 0) {
				printf ("%d", v[i][l]);
			} else {
				printf (" %d", v[i][l]);
			}
			cnt--;
		}
		for (int j = l + 1; j < n - l && cnt; j++) {
			printf (" %d", v[m - l - 1][j]);
			cnt--;
		}
		for (int i = m - l - 2; i >= l && cnt; i--) {
			printf (" %d", v[i][n - l - 1]);
			cnt--;
		}
		for (int j = n - l - 2; j > l && cnt; j--) {
			printf (" %d", v[l][j]);
			cnt--;
		}
		l++;
	}
	return 0;
}
